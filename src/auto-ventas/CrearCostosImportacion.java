/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package autoventasbd2kevinramirez;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.Types;  

/**
 *
 * @author kevin
 */
public class CrearCostosImportacion extends javax.swing.JFrame {

    /**
     * Creates new form CrearCostosImportacion
     */
    public CrearCostosImportacion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtVin = new javax.swing.JTextField();
        btnConsultarPorVin = new javax.swing.JButton();
        txtIdImportacion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPrecioDolares = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTasaCambio = new javax.swing.JTextField();
        btnPrecioQuetzales = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtPrecioQuetzales = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTraidaQuetzales = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtImpuesto = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTramites = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCostoPlacas = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtOtrosGastos = new javax.swing.JTextField();
        BtnGuardarCostos = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtCostoTotal = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtPorcentajeGanancia = new javax.swing.JTextField();
        btnCostoTotal = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtPrecioVenta = new javax.swing.JTextField();
        btnPrecioVenta = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel1.setText("Costos importacion ");

        btnRegresar.setBackground(new java.awt.Color(204, 204, 204));
        btnRegresar.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel2.setText("VIN");

        btnConsultarPorVin.setBackground(new java.awt.Color(204, 204, 204));
        btnConsultarPorVin.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnConsultarPorVin.setText("Consultar");
        btnConsultarPorVin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarPorVinActionPerformed(evt);
            }
        });

        txtIdImportacion.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel3.setText("ID importacion");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel4.setText("Precio dolares");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel5.setText("Tasa de  cambio");

        btnPrecioQuetzales.setBackground(new java.awt.Color(204, 204, 204));
        btnPrecioQuetzales.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnPrecioQuetzales.setText("Calcular");
        btnPrecioQuetzales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrecioQuetzalesActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel6.setText("Precio en quetzales");

        txtPrecioQuetzales.setEditable(false);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel7.setText("Costo traida en quetzales");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel8.setText("Impuesto");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel9.setText("Tramites");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel10.setText("Costo de placas");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel11.setText("Otros gastos");

        BtnGuardarCostos.setBackground(new java.awt.Color(204, 204, 204));
        BtnGuardarCostos.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        BtnGuardarCostos.setText("Guardar");
        BtnGuardarCostos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGuardarCostosActionPerformed(evt);
            }
        });

        btnLimpiar.setBackground(new java.awt.Color(204, 204, 204));
        btnLimpiar.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel12.setText("Costo Total");

        txtCostoTotal.setEditable(false);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel13.setText("Porcentaje Ganancia");

        btnCostoTotal.setBackground(new java.awt.Color(204, 204, 204));
        btnCostoTotal.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnCostoTotal.setText("Calcular");
        btnCostoTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCostoTotalActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel14.setText("Precio Venta");

        txtPrecioVenta.setEditable(false);

        btnPrecioVenta.setBackground(new java.awt.Color(204, 204, 204));
        btnPrecioVenta.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnPrecioVenta.setText("Calcular");
        btnPrecioVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrecioVentaActionPerformed(evt);
            }
        });

        jLabel15.setText("Ej: 60=60%");

        btnActualizar.setBackground(new java.awt.Color(204, 204, 204));
        btnActualizar.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txtPrecioQuetzales, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(30, 30, 30)
                                        .addComponent(txtTramites, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(11, 11, 11)
                                .addComponent(txtTraidaQuetzales, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtOtrosGastos, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(75, 75, 75))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtPrecioDolares, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTasaCambio, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPrecioQuetzales)
                        .addGap(63, 63, 63))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCostoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(btnCostoTotal))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtVin, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnConsultarPorVin)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIdImportacion, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(txtImpuesto, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(BtnGuardarCostos)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnLimpiar)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnRegresar)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnActualizar))
                                    .addComponent(txtCostoPlacas, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 98, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPorcentajeGanancia, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(txtPrecioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPrecioVenta))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jLabel1)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtVin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultarPorVin)
                    .addComponent(txtIdImportacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtPrecioDolares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtTasaCambio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPrecioQuetzales))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtTraidaQuetzales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtPrecioQuetzales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtImpuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtTramites, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtCostoPlacas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtOtrosGastos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtCostoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCostoTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtPorcentajeGanancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(txtPrecioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrecioVenta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnGuardarCostos)
                    .addComponent(btnLimpiar)
                    .addComponent(btnRegresar)
                    .addComponent(btnActualizar))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        this.setVisible(false);
        new CostosImportacion().setVisible(true);
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnConsultarPorVinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarPorVinActionPerformed
 try {
        String vin = txtVin.getText().trim();
        Connection conn = SesionUsuario.conexion;

        // Llamada al procedimiento que obtiene el id_importacion por VIN
        CallableStatement cs = conn.prepareCall("{ call PROYECTOBD.obtener_id_importacion_por_vin(?, ?) }");
        cs.setString(1, vin);
        cs.registerOutParameter(2, java.sql.Types.INTEGER);
        cs.execute();

        int idImportacion = cs.getInt(2);

        if (cs.wasNull()) {
            // Si no se encontró el ID de importación, mostramos el mensaje
            JOptionPane.showMessageDialog(null, "No se encontró ninguna importación para este VIN.");
            limpiarCampos();  // Limpiar los campos si no hay información
        } else {
            // Si existe el ID, mostramos el mensaje y el ID
            txtIdImportacion.setText(String.valueOf(idImportacion));

            // Verificamos el estado del vehículo
            verificarEstadoVehiculo(vin, idImportacion);  // Llamar a verificarEstadoVehiculo con idImportacion
        }

        cs.close();

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Error al consultar el ID de importación: " + ex.getMessage());
        ex.printStackTrace();
    }
    }//GEN-LAST:event_btnConsultarPorVinActionPerformed
private void verificarEstadoVehiculo(String vin, int idImportacion) {
    try {
        Connection conn = SesionUsuario.conexion;

        // Llamada al procedimiento para obtener el estado del vehículo
        CallableStatement cs3 = conn.prepareCall("{ ? = call proyectobd.obtener_estado_vehiculo(?) }");
        cs3.registerOutParameter(1, Types.INTEGER);
        cs3.setString(2, vin);
        cs3.execute();
        int estadoVehiculo = cs3.getInt(1);
        cs3.close();

        // Verificar el estado del vehículo
        if (estadoVehiculo == 1) {
            JOptionPane.showMessageDialog(null, "Este vehículo ya tiene información cargada. Para continuar, modifica el estado del vehículo.");
            txtIdImportacion.setText("");
            txtVin.setText("");
            txtVin.requestFocus();   
        } else if (estadoVehiculo != 3) {  // Si no está en reparación
            JOptionPane.showMessageDialog(null, "El vehículo no está en reparación. No se puede calcular el costo total.");
        } else {
            // Si el vehículo está en reparación, mostramos los costos existentes
            verificarCostosExistentes(idImportacion);
        }

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Error al verificar el estado del vehículo: " + ex.getMessage());
        ex.printStackTrace();
    }
}
private void verificarCostosExistentes(int idImportacion) {
    try {
        Connection conn = SesionUsuario.conexion;

        // Llamar al procedimiento PL/SQL que obtiene los datos de importacioncostos
        CallableStatement cs2 = conn.prepareCall("{ call PROYECTOBD.obtener_costos_importacion(?, ?, ?, ?, ?, ?, ?, ?) }");

        cs2.setInt(1, idImportacion);
        cs2.registerOutParameter(2, java.sql.Types.DOUBLE); // precioquetzal
        cs2.registerOutParameter(3, java.sql.Types.DOUBLE); // costotraidaquetzal
        cs2.registerOutParameter(4, java.sql.Types.DOUBLE); // impuestos
        cs2.registerOutParameter(5, java.sql.Types.DOUBLE); // tramites
        cs2.registerOutParameter(6, java.sql.Types.DOUBLE); // placas
        cs2.registerOutParameter(7, java.sql.Types.DOUBLE); // otrosgastos
        cs2.registerOutParameter(8, java.sql.Types.DOUBLE); // costototal

        cs2.execute();

        // Comprobar si alguno de los valores es NULL
        if (cs2.getObject(2) != null || cs2.getObject(3) != null || cs2.getObject(4) != null ||
            cs2.getObject(5) != null || cs2.getObject(6) != null || cs2.getObject(7) != null || cs2.getObject(8) != null) {

            // Si existen datos, mostrar la ventana emergente
            int respuesta = JOptionPane.showConfirmDialog(null, "Este VIN ya tiene información de costos de importación. ¿Desea cargarlos para actualizarlos?", "Cargar Costos", JOptionPane.YES_NO_OPTION);

            if (respuesta == JOptionPane.YES_OPTION) {
                // Cargar los datos en los campos de texto
                cargarDatosExistentes(cs2);
            } else {
                limpiarCampos(); // Limpiar los campos si el usuario no desea cargar los datos
            }
        } else {
            // Si no existen datos de costos, mostrar un mensaje
            JOptionPane.showMessageDialog(null, "No existen datos de costos para este VIN. Puede ingresar los nuevos datos.");
            limpiarCampos(); // Limpiar los campos para ingresar nuevos datos
        }

        cs2.close();

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Error al verificar los costos de importación: " + ex.getMessage());
        ex.printStackTrace();
    }
}

private void cargarDatosExistentes(CallableStatement cs2) {
    try {
        // Usamos String.format para asegurarnos de que los números siempre tengan dos decimales
        txtPrecioQuetzales.setText(String.format("%.2f", cs2.getDouble(2)));
        txtTraidaQuetzales.setText(String.format("%.2f", cs2.getDouble(3)));
        txtImpuesto.setText(String.format("%.2f", cs2.getDouble(4)));
        txtTramites.setText(String.format("%.2f", cs2.getDouble(5)));
        txtCostoPlacas.setText(String.format("%.2f", cs2.getDouble(6)));
        txtOtrosGastos.setText(String.format("%.2f", cs2.getDouble(7)));
        txtCostoTotal.setText(String.format("%.2f", cs2.getDouble(8)));
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Error al cargar los datos: " + ex.getMessage());
        ex.printStackTrace();
    }
}

// Método para limpiar los campos si el usuario decide no cargar los datos
private void limpiarCampos() {
    txtPrecioQuetzales.setText("");
    txtTraidaQuetzales.setText("");
    txtImpuesto.setText("");
    txtTramites.setText("");
    txtCostoPlacas.setText("");
    txtOtrosGastos.setText("");
    txtCostoTotal.setText("");

}

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        txtVin.setText("");
        txtIdImportacion.setText("");
        txtPrecioDolares.setText("");
        txtTasaCambio.setText("");
        txtPrecioQuetzales.setText("");
        txtTraidaQuetzales.setText("");
        txtImpuesto.setText("");
        txtTramites.setText("");
        txtCostoPlacas.setText("");
        txtOtrosGastos.setText("");
        txtCostoTotal.setText("");
        txtPorcentajeGanancia.setText("");
        txtPrecioVenta.setText("");
        
        txtVin.requestFocus();     
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnPrecioQuetzalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrecioQuetzalesActionPerformed
    try {
            // Obtener valores desde los campos
            double precioDolares = Double.parseDouble(txtPrecioDolares.getText().trim());
            double tasaCambio = Double.parseDouble(txtTasaCambio.getText().trim());

            // Calcular el total en quetzales
            double precioQuetzales = precioDolares * tasaCambio;

            // Mostrar resultado en el campo correspondiente
            txtPrecioQuetzales.setText(String.format("%.2f", precioQuetzales));

        } catch (NumberFormatException ex) {
            // En caso de error de conversión (campo vacío o texto no numérico)
            txtPrecioQuetzales.setText("Error");
        }
    }//GEN-LAST:event_btnPrecioQuetzalesActionPerformed

    private void btnCostoTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCostoTotalActionPerformed
        try {
            // Obtener los valores desde los campos de texto
            double precioQuetzales = Double.parseDouble(txtPrecioQuetzales.getText().trim());
            double traidaQuetzal = Double.parseDouble(txtTraidaQuetzales.getText().trim());
            double impuesto = Double.parseDouble(txtImpuesto.getText().trim());
            double tramites = Double.parseDouble(txtTramites.getText().trim());
            double costoPlacas = Double.parseDouble(txtCostoPlacas.getText().trim());
            double otrosGastos = Double.parseDouble(txtOtrosGastos.getText().trim());

            // Calcular el costo total sumando todos los valores
            double costoTotal = precioQuetzales + traidaQuetzal + impuesto + tramites + costoPlacas + otrosGastos;

            // Mostrar el resultado en el campo correspondiente
            txtCostoTotal.setText(String.format("%.2f", costoTotal));

        } catch (NumberFormatException ex) {
            // En caso de error de conversión (campo vacío o texto no numérico)
            txtCostoTotal.setText("Error");
        }
    }//GEN-LAST:event_btnCostoTotalActionPerformed

    private void btnPrecioVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrecioVentaActionPerformed
        try {
               // Obtener los valores desde los campos de texto
               double costoTotal = Double.parseDouble(txtCostoTotal.getText().trim());
               double porcentajeGanancia = Double.parseDouble(txtPorcentajeGanancia.getText().trim());

               // Convertir el porcentaje a su valor decimal
               double porcentajeDecimal = porcentajeGanancia / 100;  // Si se ingresa 60, se convierte en 0.60

               // Calcular el precio de venta
               double precioVenta = costoTotal * (1 + porcentajeDecimal);

               // Mostrar el resultado en el campo correspondiente
               txtPrecioVenta.setText(String.format("%.2f", precioVenta));

           } catch (NumberFormatException ex) {
               // En caso de error de conversión (campo vacío o texto no numérico)
               txtPrecioVenta.setText("Error");
        }
    }//GEN-LAST:event_btnPrecioVentaActionPerformed

    private void BtnGuardarCostosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGuardarCostosActionPerformed
        try {
                String vin = txtVin.getText().trim();
                double precioDolares = Double.parseDouble(txtPrecioDolares.getText().trim());
                double tasaCambio = Double.parseDouble(txtTasaCambio.getText().trim());
                double costoTraida = Double.parseDouble(txtTraidaQuetzales.getText().trim());
                double impuestos = Double.parseDouble(txtImpuesto.getText().trim());
                double tramites = Double.parseDouble(txtTramites.getText().trim());
                double placas = Double.parseDouble(txtCostoPlacas.getText().trim());
                double otrosGastos = Double.parseDouble(txtOtrosGastos.getText().trim());
                double gananciaPorcentaje = Double.parseDouble(txtPorcentajeGanancia.getText().trim()); // Capturamos el porcentaje de ganancia

                Connection conn = SesionUsuario.conexion;

                // Llamada al procedimiento para obtener el id_importacion
                CallableStatement cs = conn.prepareCall("{ call proyectobd.insertar_costos_importacion(?, ?, ?, ?, ?, ?, ?, ?) }");
                cs.setString(1, vin);
                cs.setDouble(2, precioDolares);
                cs.setDouble(3, tasaCambio);
                cs.setDouble(4, costoTraida);
                cs.setDouble(5, impuestos);
                cs.setDouble(6, tramites);
                cs.setDouble(7, placas);
                cs.setDouble(8, otrosGastos);
                cs.execute();
                cs.close();

                // Llamada al procedimiento para calcular el costo total y precio de venta
                CallableStatement cs2 = conn.prepareCall("{ call proyectobd.costototalvehiculo(?, ?) }");
                cs2.setString(1, vin);
                cs2.setDouble(2, gananciaPorcentaje);
                cs2.execute();
                cs2.close();

                // Mostrar mensaje de éxito
                JOptionPane.showMessageDialog(null, "Los costos de importación han sido actualizados correctamente y el costo total calculado.");

            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error al guardar los datos: " + ex.getMessage());
                //Si actua el disparador trg_validar_costos_importacion manda el mensaje de error de valores negativos
                if (ex.getErrorCode() == 20001) {  // Código del RAISE_APPLICATION_ERROR
                    JOptionPane.showMessageDialog(null, ex.getMessage(), "Error de validación", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Por favor ingresa valores numéricos válidos.");
            }
    }//GEN-LAST:event_BtnGuardarCostosActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
     try {
        String vin = txtVin.getText().trim();
        double precioDolares = Double.parseDouble(txtPrecioDolares.getText().trim());
        double tasaCambio = Double.parseDouble(txtTasaCambio.getText().trim());
        double costoTraida = Double.parseDouble(txtTraidaQuetzales.getText().trim());
        double impuestos = Double.parseDouble(txtImpuesto.getText().trim());
        double tramites = Double.parseDouble(txtTramites.getText().trim());
        double placas = Double.parseDouble(txtCostoPlacas.getText().trim());
        double otrosGastos = Double.parseDouble(txtOtrosGastos.getText().trim());
        double gananciaPorcentaje = Double.parseDouble(txtPorcentajeGanancia.getText().trim()); // Capturamos el porcentaje de ganancia

        Connection conn = SesionUsuario.conexion;

        // Llamada al procedimiento para actualizar los costos
        CallableStatement cs = conn.prepareCall("{ call proyectobd.actualizar_costos_importacion(?, ?, ?, ?, ?, ?, ?, ?) }");
        cs.setString(1, vin);
        cs.setDouble(2, precioDolares);
        cs.setDouble(3, tasaCambio);
        cs.setDouble(4, costoTraida);
        cs.setDouble(5, impuestos);
        cs.setDouble(6, tramites);
        cs.setDouble(7, placas);
        cs.setDouble(8, otrosGastos);
        cs.execute();
        cs.close();

        // Llamada al procedimiento para calcular el costo total y precio de venta
        CallableStatement cs2 = conn.prepareCall("{ call proyectobd.costototalvehiculo(?, ?) }");
        cs2.setString(1, vin);
        cs2.setDouble(2, gananciaPorcentaje);
        cs2.execute();
        cs2.close();

        // Mostrar mensaje de éxito
        JOptionPane.showMessageDialog(null, "Los costos de importación han sido actualizados correctamente y el costo total calculado.");

    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error al actualizar los datos: " + ex.getMessage());
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(null, "Por favor ingresa valores numéricos válidos.");
    }
    }//GEN-LAST:event_btnActualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearCostosImportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearCostosImportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearCostosImportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearCostosImportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearCostosImportacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnGuardarCostos;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnConsultarPorVin;
    private javax.swing.JButton btnCostoTotal;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnPrecioQuetzales;
    private javax.swing.JButton btnPrecioVenta;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtCostoPlacas;
    private javax.swing.JTextField txtCostoTotal;
    private javax.swing.JTextField txtIdImportacion;
    private javax.swing.JTextField txtImpuesto;
    private javax.swing.JTextField txtOtrosGastos;
    private javax.swing.JTextField txtPorcentajeGanancia;
    private javax.swing.JTextField txtPrecioDolares;
    private javax.swing.JTextField txtPrecioQuetzales;
    private javax.swing.JTextField txtPrecioVenta;
    private javax.swing.JTextField txtTasaCambio;
    private javax.swing.JTextField txtTraidaQuetzales;
    private javax.swing.JTextField txtTramites;
    private javax.swing.JTextField txtVin;
    // End of variables declaration//GEN-END:variables
}
